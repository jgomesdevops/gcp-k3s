# Default values for k3s-app
# This is a YAML-formatted file.
#
# To deploy with a specific image tag (e.g., from GitHub SHA):
# helm install my-app ./helm/k3s-app --set app.imageTagOverride=abc123
# 
# Or for CI/CD pipelines:
# helm install my-app ./helm/k3s-app --set app.imageTagOverride=${{ github.sha }}

# Application configuration
app:
  name: node-app
  image:
    repository: europe-west1-docker.pkg.dev/certain-mission-467310-u4/node-app-repo/node-app
    tag: latest
    pullPolicy: Always
  # Dynamic image tag override (can be set via --set app.image.tagOverride=sha)
  imageTagOverride: ""
  port: 8080
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Security configuration
security:
  # Container security context
  containerSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  
  # Pod security context
  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

# Service configuration
service:
  type: NodePort
  port: 8080
  targetPort: 8080
  nodePort: 30000

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: app.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

# RBAC configuration
rbac:
  enabled: true
  createServiceAccount: true
  serviceAccountName: pipeline-sa
  clusterRole:
    name: pipeline-role
    rules:
      - apiGroups: [""]
        resources: ["pods", "services", "configmaps", "secrets"]
        verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
      - apiGroups: ["apps"]
        resources: ["deployments", "replicasets"]
        verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
      - apiGroups: ["networking.k8s.io"]
        resources: ["ingresses"]
        verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Health checks
healthChecks:
  livenessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: PORT
    value: "8080"

# Authentication configuration
auth:
  username: admin
  password: secure-password-123

# Labels and annotations
labels: {}
annotations: {}

# Namespace
namespace:
  create: true
  name: node-app

# Image pull secrets (if needed)
imagePullSecrets: []

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal Pod Autoscaler
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80 